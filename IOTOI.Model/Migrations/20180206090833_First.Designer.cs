// <auto-generated />
using IOTOI.Model.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using System;

namespace IOTOI.Model.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20180206090833_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("IOTOI.Model.CCTV", b =>
                {
                    b.Property<int>("CCTVId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountId");

                    b.Property<string>("AccountPass");

                    b.Property<string>("CCTVName")
                        .IsRequired();

                    b.Property<string>("CCTVType");

                    b.Property<string>("IpAddress")
                        .IsRequired();

                    b.HasKey("CCTVId");

                    b.ToTable("CCTV");
                });

            modelBuilder.Entity("IOTOI.Model.Common.ProtocolType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProtocolType");
                });

            modelBuilder.Entity("IOTOI.Model.ZigBee.ZigBeeEndDevice", b =>
                {
                    b.Property<ulong>("MacAddress");

                    b.Property<bool>("IsConnected");

                    b.Property<string>("Name");

                    b.Property<ushort>("NetworkAddress");

                    b.HasKey("MacAddress");

                    b.HasIndex("MacAddress")
                        .IsUnique();

                    b.ToTable("ZigBeeEndDevice");
                });

            modelBuilder.Entity("IOTOI.Model.ZigBee.ZigBeeEndPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<ushort>("CommanProfileId");

                    b.Property<string>("CustomName");

                    b.Property<ushort>("DeviceId");

                    b.Property<byte>("EpNum");

                    b.Property<bool>("IsActivated");

                    b.Property<ulong>("MacAddress");

                    b.Property<string>("Model");

                    b.Property<string>("Name");

                    b.Property<int>("ProtocolTypeId");

                    b.Property<string>("Vendor");

                    b.HasKey("Id");

                    b.HasIndex("MacAddress");

                    b.HasIndex("ProtocolTypeId");

                    b.HasIndex("EpNum", "MacAddress")
                        .IsUnique();

                    b.ToTable("ZigBeeEndPoint");
                });

            modelBuilder.Entity("IOTOI.Model.ZigBee.ZigBeeInCluster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClusterId");

                    b.Property<string>("Name");

                    b.Property<int>("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("ZigBeeInCluster");
                });

            modelBuilder.Entity("IOTOI.Model.ZigBee.ZigBeeInClusterAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("AttrValue");

                    b.Property<string>("Name");

                    b.Property<int>("ParentId");

                    b.Property<byte>("ZigBeeType");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("ZigBeeInClusterAttribute");
                });

            modelBuilder.Entity("IOTOI.Model.ZigBee.ZigBeeOutCluster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClusterId");

                    b.Property<string>("Name");

                    b.Property<int>("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("ZigBeeOutCluster");
                });

            modelBuilder.Entity("IOTOI.Model.ZigBee.ZigBeeOutClusterAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("AttrValue");

                    b.Property<string>("Name");

                    b.Property<int>("ParentId");

                    b.Property<byte>("ZigBeeType");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("ZigBeeOutClusterAttribute");
                });

            modelBuilder.Entity("IOTOI.Model.ZWave.ZWaveNode", b =>
                {
                    b.Property<int>("Id");

                    b.Property<uint>("HomeId");

                    b.Property<string>("Label");

                    b.Property<string>("Location");

                    b.Property<string>("Manufacturer");

                    b.Property<string>("Name");

                    b.Property<string>("Product");

                    b.Property<bool>("Value");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("ZWaveNode");
                });

            modelBuilder.Entity("IOTOI.Model.ZigBee.ZigBeeEndPoint", b =>
                {
                    b.HasOne("IOTOI.Model.ZigBee.ZigBeeEndDevice")
                        .WithMany("EndPoints")
                        .HasForeignKey("MacAddress")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IOTOI.Model.Common.ProtocolType")
                        .WithMany("EndPoints")
                        .HasForeignKey("ProtocolTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IOTOI.Model.ZigBee.ZigBeeInCluster", b =>
                {
                    b.HasOne("IOTOI.Model.ZigBee.ZigBeeEndPoint")
                        .WithMany("ZigBeeInClusters")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IOTOI.Model.ZigBee.ZigBeeInClusterAttribute", b =>
                {
                    b.HasOne("IOTOI.Model.ZigBee.ZigBeeInCluster")
                        .WithMany("ZigBeeInClusterAttributes")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IOTOI.Model.ZigBee.ZigBeeOutCluster", b =>
                {
                    b.HasOne("IOTOI.Model.ZigBee.ZigBeeEndPoint")
                        .WithMany("ZigBeeOutClusters")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IOTOI.Model.ZigBee.ZigBeeOutClusterAttribute", b =>
                {
                    b.HasOne("IOTOI.Model.ZigBee.ZigBeeOutCluster")
                        .WithMany("ZigBeeOutClusterAttributes")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
